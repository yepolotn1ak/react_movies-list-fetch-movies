{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","services/getMovieCard.ts","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","_ref$onMovieAdd","onMovieAdd","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","loading","setLoading","_useState5","_useState6","isError","setIsError","_useState7","_useState8","movieData","setMovieData","Poster","Title","Plot","imdbID","concat","getMovieCard","_Fragment","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","toLowerCase","trim","result","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","newMovie","prevMovies","find","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cf60ca5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">\n            {movie.title}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n\n        <br />\n\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovieCard } from '../../services/getMovieCard';\n\ntype Props = {\n  onMovieAdd: (newMovie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onMovieAdd = () => {},\n}) => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [movieData, setMovieData] = useState<MovieData | null>(null);\n  const movie = getMovieCard(movieData);\n\n  const handleSearch = (event: React.FormEvent) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(query.toLowerCase().trim())\n      .then(result => {\n        if ('Error' in result) {\n          setMovieData(null);\n          setIsError(true);\n        } else {\n          setMovieData(result);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setIsError(false);\n  };\n\n  const handleAddMovieCard = () => {\n    if (movie) {\n      onMovieAdd(movie);\n    }\n\n    setMovieData(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSearch}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': isError,\n              })}\n              value={query}\n              onChange={handleChangeQuery}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': loading,\n              })}\n              disabled={!query.trim()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieCard}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">\n            Preview\n          </h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport { Movie } from '../types/Movie';\nimport { MovieData } from '../types/MovieData';\n\nconst DEFAULT_POSTER = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport function getMovieCard(movieData: MovieData | null): Movie | null {\n  if (!movieData) {\n    return null;\n  }\n\n  const {\n    Poster,\n    Title,\n    Plot,\n    imdbID,\n  } = movieData;\n\n  return {\n    title: Title,\n    description: Plot,\n    imgUrl: Poster === 'N/A' ? DEFAULT_POSTER : Poster,\n    imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n    imdbId: imdbID,\n  };\n}\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3567828e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleMovieAdd = (newMovie: Movie) => {\n    setMovies(prevMovies => {\n      return prevMovies.find(({ imdbId }) => imdbId === newMovie.imdbId)\n        ? prevMovies\n        : [...prevMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={handleMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}